image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd1$u[, 1], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
par(mfrow = c(1, 2))
plot(svd1$d, xlab = "Column", ylab = "Singular value", pch = 19)
plot(svd1$d^2 / sum(svd1$d^2), xlab = "Column", ylab = "Prop. of variance explained",
pch = 19)
svd1 <- svd(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered, scale = TRUE)
plot(pca1$rotation[, 1], svd1$v[, 1], pch = 19, xlab = "Principal Component 1",
ylab = "Right Singular Vector 1")
abline(c(0, 1))
constantMatrix <- dataMatrixOrdered*0
for(i in 1:dim(dataMatrixOrdered)[1]){constantMatrix[i,] <- rep(c(0,1),each=5)}
svd1 <- svd(constantMatrix)
par(mfrow = c(1,3))
image(t(constantMatrix)[, nrow(constantMatrix):1])
plot(svd1$d, xlab = "Column", ylab="Singular value", pch = 19)
plot(svd1$d^2 / sum(svd1$d^2), xlab = "Column",
ylab = "Prop. of variance explained", pch = 19)
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip1 <- rbinom(1, size = 1, prob = 0.5)
coinFlip2 <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coinFlip1) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0, 5), each = 5)
}
if (coinFlip2) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0, 5), 5)
}
}
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
svd2 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rep(c(0, 1), each = 5), pch = 19, xlab = "Column", ylab = "Pattern 1")
plot(rep(c(0, 1), 5), pch = 19, xlab = "Column", ylab = "Pattern 2")
svd2 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd2$v[, 1], pch = 19, xlab = "Column", ylab = "First right singular vector")
plot(svd2$v[, 2], pch = 19, xlab = "Column", ylab = "Second right singular vector")
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 2))
plot(svd1$d, xlab = "Column", ylab = "Singular value", pch = 19)
plot(svd1$d^2/sum(svd1$d^2), xlab = "Column", ylab = "Percent of variance explained",
pch = 19)
source("http://bioconductor.org/biocLite.R")
biocLite("impute")
library(impute)  ## Available from http://bioconductor.org
dataMatrix2 <- dataMatrixOrdered
dataMatrix2[sample(1:100, size = 40, replace = FALSE)] <- NA
dataMatrix2 <- impute.knn(dataMatrix2)$data
svd1 <- svd(scale(dataMatrixOrdered))
svd2 <- svd(scale(dataMatrix2))
par(mfrow = c(1,2))
plot(svd1$v[,1], pch = 19)
plot(svd2$v[,1], pch = 19)
load("data/face.rda")
image(t(faceData)[, nrow(faceData):1])
load("data/face.rda")
face <- read.table("C:/Users/Utilizador/Desktop/DataScience/ExploratoryDataAnalysis/week3/face.rda", header=TRUE, quote="\"")
View(face)
load("data/face.rda")
image(t(faceData)[, nrow(faceData):1])
#
heat.colors()
topo.colors()
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.5)
pal(seq(0, 1, len = 10))
pal <- colorRampPalette(c("red", "yellow"))
pal(2)
pal(10)
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20)) # 20 colors
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y)
library(colorspace)
install.packages("~/RCran/colorspace_1.2-7.zip", repos = NULL, type = "win.binary")
library(colorspace)
load(colorspace)
library(colorspace)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x, y, col = rgb(0, 0, 0, 0.2), pch = 19)
library(swirl)
swirl()
ls()
rm(list=ls()) # clean workspace
ls()
library(swirl)
swirl()
install_course("Exploratory_Data_Analysis")
swirl()
swirl()
library(ggplot2)
rm(list=ls()) # clean workspace
library(ggplot2)
install.packages("~/RCran/colorspace_1.2-6.zip", repos = NULL, type = "win.binary")
library(ggplot2)
library(swirl)
swirl()
dist(dataFrame)
hc<- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, h=1.5)
abline(hc, h=1.5, h=1.5)
abline(h=1.5, col="blue")
abline(v=0.4, col="red")
abline(h=0.4, col="red")
5
abline(h=0.05, col="green")
12
abline(h=0.05, col="green")
dist(dfsm)
dist(dFsm)
plot(as.dendrogram(hc))
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
abline(h=0.05, col="green")
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, colset = cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy, col=c("red", "orange", "purple"), pch=3,cex=2, lwd=2)
mdist(x,y, cx, cy)
apply(distTmp, 2, which.min())
apply(distTmp, 2, which.min(distTmp))
apply(distTmp, 2, which.min
)
points(x,y, pch=19, cex=2, col= cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points
points(newCx, newCy, col= cols1, pch=8, cex=2, lwd=2)
mdist( x, y, newCx, newCy)
aplly(distTmp2, 2,which.min)
apply(distTmp2, 2,which.min)
points(x,y, pch=19, cex=2, col= cols1[newClust])
points(x,y, pch=19, cex=2, col= cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finaCx, finalCy, col= cols1, pch=8, cex=2, lwd=2)
points(finalCx, finalCy, col= cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2[,2]
svd2$v[,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u%*%svd1$d
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage
myImage(a1)
diag(svd1$d[1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*%
| t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myimage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
swirl()
swirl
swirl()
library(swirl)
swirl()
dim(ssd)
names(ssd[,c(562,563)])
table(ssd$subject)
sum(table(ssd$subject)))
sum(table(ssd$subject))
table(ssd$activity)
sub1<- subset(ssd, subject = 1)
sub1<- subset(ssd, subject == 1
)
dim(sub1)
names(sub[,c(1:12])
names(sub[,c(1:12)])
names(sub1[,c(1:12)])
myedit("showXY.R")
showMe(c(1:6))
dist(x[,1:3])
mdist<- dist(sub1$x[,1:3])
library(swirl)
rm(list=ls())
ls()
library(swirl)
swirl()
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying<- which(kClust$size==29)
plot( kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
name(sub[,1:3])
names(sub[,1:3])
names(sub1[,1:3])
walkdown<- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
ls()
rm(list=ls()) # clean workspace
daily_88101_1999 <- read.csv("C:/Users/Utilizador/Desktop/DataScience/ExploratoryDataAnalysis/week4/pm25_data/daily_88101_1999.csv")
View(daily_88101_1999)
ls()
rm(list=ls())
pm0 <- read.csv("C:/Users/Utilizador/Desktop/DataScience/ExploratoryDataAnalysis/week4/pm25_data/daily_88101_1999.csv")
View(pm0)
dim(pm0)
head(pm0)
ls()
rm(list=ls())
daily_88101_1999 <- read.csv("C:/Users/Utilizador/Desktop/DataScience/ExploratoryDataAnalysis/week4/pm25_data/daily_88101_1999.csv", header=FALSE, comment.char="#")
View(daily_88101_1999)
pm0 <- read.csv("C:/Users/Utilizador/Desktop/DataScience/ExploratoryDataAnalysis/week4/pm25_data/daily_88101_1999.csv")
dim(pm0)
pm1 <- read.csv("C:/Users/Utilizador/Desktop/DataScience/ExploratoryDataAnalysis/week4/pm25_data/daily_88101_2012.csv")
View(pm1)
dim(pm1)
summary(x1)
x0<-pmo$Arithmetic.Mean
str(x0)
x0<-pm0$Arithmetic.Mean
str(x0)
x1<-pm1$Arithmetic.Mean
str(x1)
Summary(x0)
Summary(x1)
as.numeric(x0)
as.numeric(x1)
Summary(x1)
as.numeric(pm1$Arithmetic.Mean)
x1<-pm1$Arithmetic.Mean
Summary(x1)
class(as.numeric(pm1$Arithmetic.Mean))
x1<-pm1$Arithmetic.Mean
Summary(x1)
class(pm1$Arithmetic.Mean)
Summary(x1)
class(pm0$Arithmetic.Mean)
Summary(x0)
names(pmo)
names(pm0)
head(pm0)
x1<-pm1$X1st.Max.Value
str(x1)
Summary(x1)
class(pm0$X1st.Max.Value)
Summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative<-x1<0
str(negative)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates<-pm1$Date.Local
dates<-pm1$Date.Local
str(dates)
dates<- as.Date(as.character(dates), "%y%m%d%")
str(dates)
hist(dates, "month")
hist(dates, "month", na.rm=TRUE)
hist(dates,"month")
hist(dates[negative],"month")
site0<- unique(subset(pm0, State.Code == 36, c(County.Code, Site.ID)))
names(pm0)
site0<- unique(subset(pm0, State.Code == 36, c(County.Code, Site.NUM)))
site0<- unique(subset(pm0, State.Code == 36, c(County.Code, Site.Num)))
site1<- unique(subset(pm1, State.Code == 36, c(County.Code, Site.Num)))
head(site0)
site0<- paste(site0[,1], site0[,2], sep = ".")
site1<- paste(site1[,1], site1[,2], sep = ".")
str(site0)
str(site1)
both<- intersect(site0, site1)
both
pm0$County.Site<- with(pm0, paste(County.Code, Site.Num, sep = "."))
pm1$County.Site<- with(pm1, paste(County.Code, Site.Num, sep = "."))
cnt0<- subset(pm0, State.Code ==36 & County.Site %in% both)
cnt1<- subset(pm1, State.Code ==36 & County.Site %in% both)
head(cnt0)
sapply(split(cnto, cno$county.site), nrow)
sapply(split(cnt0, cno$county.site), nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt0, cnt0$County.site), nrow)
split(cnt0, cnt0$County.site)
sapply(split(cnt1, cnt1$County.site), nrow)
pm1sub<- subset(pm1, State.Code==36 & County.Code==63 & Site.Num == 2008)
pm1sub<- subset(pm1, State.Code==36 & County.Code==63 & Site.Num == 2008)
pm0sub<- subset(pm0, State.Code==36 & County.Code==63 & Site.Num == 2008)
dim(pm1sub)
dim(pm0sub)
date1<- pm1sub$Date.Local
x1sub<- pm1sub$Arithmetic.Mean
dates1<- as.Date(as.character(date1), "y%m%d")
plot(date1, x1sub)
dates0<- pm1sub$Date.Local
x0sub<- pm0sub$Arithmetic.Mean
dates0<- as.Date(as.character(dates0), "y%m%d")
plot(dates0, x0sub)
dates0<- pm0sub$Date.Local
x0sub<- pm0sub$Arithmetic.Mean
dates0<- as.Date(as.character(dates0), "y%m%d")
plot(dates0, x0sub)
plot(dates0, x0sub)
plot(dates0, x0sub, na.rm=TRUE)
abline(h=median(x0sub, na.rm=T))
plot(dates0, x0sub)
abline(h=median(x0sub, na.rm=T))
par(mfrow = c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub)
abline(h=median(x0sub, na.rm=T))
plot(dates1, x1sub)
abline(h=median(x1sub, na.rm=T))
plot(date1, x1sub
)
abline(h=median(x1sub, na.rm=T))
plot(date1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=T))
rng<- range(x0sub, x1sub, na.rm = T)
abline(h=median(x1sub, na.rm=T))
par(mfrow = c(1,2))
plot(dates0, x0sub, pch=20, ylim = rng)
abline(h=median(x0sub, na.rm=T))
names(pm0)
mn0<- with(pmo, tapply(Arithmetic.Mean, State.Code, mean, na.rm=T))
mn0<- with(pm0, tapply(Arithmetic.Mean, State.Code, mean, na.rm=T))
str(mn0)
summary(mn0)
mn1<- with(pm1, tapply(Arithmetic.Mean, State.Code, mean, na.rm=T))
str(mn1)
summary(mn1)
d0<- data.frame(state=names(mn0), mean=mn0)
d1<- data.frame(state=names(mn1), mean=mn1)
head(mn0)
head(mn1)
head(d0)
head(d1)
mrg<- merge(do,d1, by="state")
dim(mrg)
mrg<- merge(d0,d1, by="state")
dim(mrg)
head(mrg)
par(mfrow=c(1,1))
with(mrg, plot(rep(1999, 52), mrg[,2], xlim=c(1998, 2013)))
with(mrg, plot(rep(1999, 52), mrg[,2], xlim=c(1998, 2013)),na.rm=T)
with(mrg, plot(rep(1999, 52), mrg[,2], xlim=c(1998, 2013)))
segments(rep(1999, 52), mrg[,2],rep(2012, 52), mrg[,3] )
with(mrg, points(rep(2012, 52), mrg[,3]))
ls()
rm(list=ls())
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<- strsplit(cnames, "|", fixed = T)
cnames
names(pm0)<- make.names(cnames[[1]][wcol], )
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-  make.names(cnames[[1]][wcol])
dim(pm1)
x1<- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0), log10(x1))
negative<-x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates<-pm1$Date
str(dates)
dates<- as.Date(as.character(dates), "%y%m%d%")
dates<- as.Date(as.character(dates), "%y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site1)
str(site0)
both<- intersect(site0, site1)
both
head(pm0)
cnt0<- subset(pm0, State.Code ==36 & County.Site %in% both)
cnt0<- subset(pm0, State.Code ==36 & Country.Site %in% both)
cnt0<- subset(pm0, State.Code ==36 & county.site %in% both)
cnt1<- subset(pm1, State.Code ==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm1sub<- subset(pm1, State.Code==36 & County.Code==63 & Site.ID == 2008)
pm0sub<- subset(pm0, State.Code==36 & County.Code==63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub<- pm0sub$Sample.Value
x1sub<- pm1sub$Sample.Value
date0<- pm0sub$Date.Local
dates0<- as.Date(as.character(date0), "y%m%d")
as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates0 <-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub, na.rm=T))
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(date1, x1sub, pch=20)
plot(dates1, x1sub, pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng<- range(x0sub, x1sub, na.rm = T)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
tapply(Sample.Value,State.Code, mean, na.rm=TRUE )
tapply(Sample.Value, State.Code, mean, na.rm=TRUE )
tapply(Sample.Value, "State.Code", mean, na.rm=TRUE )
tapply("Sample.Value", "State.Code", mean, na.rm=TRUE )
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<- data.frame(state=names(mn0), mean=mn0)
d1<- data.frame(state=names(mn1), mean=mn1)
mrg<- merge(d0,d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[,2], xlim= c(.5,2.5)))
with(mrg, points(rep(1, 52), mrg[,3]))
with(mrg, points(rep(2, 52), mrg[,3]))
segments(rep(1, 52), mrg[,2],rep(2, 52), mrg[,3] )
mrg[mrg$mean.x < mrg$mean.y, ]
ls()
rm(list = ls())
install.packages("~/RCran/rmarkdown_1.0.zip", repos = NULL, type = "win.binary")
***{r}
library(datasets)
data(airquality)
summary(airquality)
install.packages("~/RCran/knitr_1.14.zip", repos = NULL, type = "win.binary")
===================================================
____________________________________________________________
data(airquality)
fit<- lm(Ozone ~ Wind + Solar.R + Temp, data = airquality)
library(xtable)
xt <- xtable(summary(fit))
install.packages("~/RCran/xtable_1.8-2.zip", repos = NULL, type = "win.binary")
library(xtable)
xt <- xtable(summary(fit))
library(xtable)
library(xtable)
ibrary(xtable)
xt <- xtable(summary(fit))
print(xt, type = "html")
xt <- xtable(summary(fit))
xt
xt
source('C:/Users/Utilizador/Desktop/DataScience/ReproducibleResearch/PA1_template.R')
library(xtable)
library(xtable)
setwd("C:/Users/Utilizador/Desktop/DataScience/ReproducibleResearch/RepData_PeerAssessment1)
activ <- read.csv("activity.csv", header=TRUE)
setwd("C:/Users/Utilizador/Desktop/DataScience/ReproducibleResearch/RepData_PeerAssessment1)
)
)
setwd("C:/Users/Utilizador/Desktop/DataScience/ReproducibleResearch/RepData_PeerAssessment1")
activ <- read.csv("activity.csv", header=TRUE)
